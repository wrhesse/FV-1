; Simple example of using pot to jump to different routines in a program
;
; In this example we will jump between a few different programs
;
rdax pot2,1
and %01100000_00000000_00000000 ;mask off only 2 bits, leaving only 4 possibilities
skp zro,prg1 ;if zero, the skip over other code to trem1
sof 1,-0.25 ;subtract 1/4
skp zro,prg2 ;if zero, skip over other code to trem2
sof 1,-0.25 ;subtract 1/4
skp zro,prg3 ;if zero, skip over other code to trem3
clr ;clear the accumulator, there's 1/4 left in it! 
;
; This is the 4th program even though it is here first
; Simple stereo delay
clr
rdax	adcl, 1
wra	delayl,1.0
rda	delayl#,1.0
wrax	dacl,0
rdax	adcr, 1
wra	delayr,1.0
rda	delayr#,1.0
wrax	dacr,0
skp	zro,pend
;
;
;First program
prg1:
clr
;------ Constant
SOF 0.0000000000,0.9990000000
WRAX REG0,0.0000000000
;------ Envelope
RDAX ADCL,1.0000000000
MULX REG0
ABSA
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
RDFX REG1,0.0003825136
WRAX REG1,0.0000000000
RDAX REG2,1.0000000000
SOF -0.0000983351,0.0000000000
RDAX REG2,1.0000000000
WRAX REG3,0.0000000000
RDAX REG1,1.0000000000
MAXX REG3,1.0000000000
WRAX REG2,0.0000000000
;------ Multiply
RDAX POT1,1.0000000000
MULX REG1
WRAX REG4,0.0000000000
;------ LFO 0
SKP RUN ,1
WLDS 0,511,32767
RDAX POT0,1.0000000000
WRAX SIN0_RATE,0.0000000000
RDAX REG4,1.0000000000
WRAX SIN0_RANGE,0.0000000000
CHO RDAL,0
SOF 0.5000000000,0.5000000000
WRAX REG5,0.0000000000
;------ Volume
RDAX ADCL,1.0000000000
MULX REG5
WRAX REG6,0.0000000000
;------ Output
RDAX REG6,1.0000000000
WRAX DACL,1.0000000000
WRAX DACR,0.0000000000
skp	zro,pend
;
;
;Second program
prg2:
clr
;------ Constant
SOF 0.0000000000,0.9990000000
WRAX REG0,0.0000000000
;------ Envelope
RDAX ADCL,1.0000000000
MULX REG0
ABSA
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
RDFX REG1,0.0003825136
WRAX REG1,0.0000000000
RDAX REG2,1.0000000000
SOF -0.0001000000,0.0000000000
RDAX REG2,1.0000000000
WRAX REG3,0.0000000000
RDAX REG1,1.0000000000
MAXX REG3,1.0000000000
WRAX REG2,0.0000000000
;------ Scale/Offset
RDAX REG1,1.0000000000
SOF -1.0000000000,0.9990000000
WRAX REG4,0.0000000000
;------ Multiply
RDAX POT1,1.0000000000
MULX REG4
WRAX REG5,0.0000000000
;------ LFO 0
SKP RUN ,1
WLDS 0,511,32767
RDAX POT0,1.0000000000
WRAX SIN0_RATE,0.0000000000
RDAX REG5,1.0000000000
WRAX SIN0_RANGE,0.0000000000
CHO RDAL,0
SOF 0.5000000000,0.5000000000
WRAX REG6,0.0000000000
;------ Volume
RDAX ADCL,1.0000000000
MULX REG6
WRAX REG7,0.0000000000
;------ Output
RDAX REG7,1.0000000000
WRAX DACL,0.0000000000
skp	zro,pend
;
;
;Third program
prg3:
clr
;------ Constant
SOF 0.0000000000,0.9990000000
WRAX REG0,0.0000000000
;------ Envelope
RDAX ADCL,1.0000000000
MULX REG0
ABSA
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
SOF -2.0000000000,0.0000000000
RDFX REG1,0.0003825136
WRAX REG1,0.0000000000
RDAX REG2,1.0000000000
SOF -0.0001000000,0.0000000000
RDAX REG2,1.0000000000
WRAX REG3,0.0000000000
RDAX REG1,1.0000000000
MAXX REG3,1.0000000000
WRAX REG2,0.0000000000
;------ Multiply
RDAX POT0,1.0000000000
MULX REG1
WRAX REG4,0.0000000000
;------ Scale/Offset
RDAX REG4,1.0000000000
SOF 0.8000000000,0.2000000000
WRAX REG5,0.0000000000
;------ LFO 0
SKP RUN ,1
WLDS 0,511,32767
RDAX REG5,1.0000000000
WRAX SIN0_RATE,0.0000000000
RDAX POT1,1.0000000000
WRAX SIN0_RANGE,0.0000000000
CHO RDAL,0
SOF 0.5000000000,0.5000000000
WRAX REG6,0.0000000000
;------ Volume
RDAX ADCL,1.0000000000
MULX REG6
WRAX REG7,0.0000000000
;------ Output
RDAX REG7,1.0000000000
WRAX DACL,0.0000000000
pend:
clr